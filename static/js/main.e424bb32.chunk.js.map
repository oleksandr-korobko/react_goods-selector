{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","value","this","setState","className","type","onClick","onHandleSetSelectedGood","map","good","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,6DAKE,SAAwBC,GACtBC,KAAKC,SAAS,CAAEH,aAAcC,MANlC,oBASE,WAAU,IAAD,OACCD,EAAiBE,KAAKH,MAAtBC,aAER,OACE,uBAAMI,UAAU,oBAAhB,UACGJ,EAEG,qBAAII,UAAU,sCAAd,oBACMJ,EADN,gBAGE,wBACE,UAAQ,cACRK,KAAK,SACLD,UAAU,cACV,aAAW,eACXE,QAAS,kBAAM,EAAKC,wBAAwB,UAKhD,oBAAIH,UAAU,QAAd,+BAKJ,uBAAOA,UAAU,QAAjB,SACE,gCACGP,EAAMW,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OAERL,UACEM,IAAW,CACT,+BAAgCD,IAAST,IAL/C,UASE,6BACGS,IAAST,EAEN,wBACE,UAAQ,eACRK,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAM,EAAKC,wBAAwB,KAJ9C,eAUA,wBACE,UAAQ,YACRF,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKC,wBAAwBE,IAJ9C,iBAWN,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGK,MAhCEA,iBAvCrB,GAAyBE,aCpBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e424bb32.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  onHandleSetSelectedGood(value: string) {\n    this.setState({ selectedGood: value });\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                aria-label=\"Remove goods\"\n                onClick={() => this.onHandleSetSelectedGood('')}\n              />\n            </h1>\n          )\n          : (\n            <h1 className=\"title\">\n              No goods selected\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={\n                  classNames({\n                    'has-background-success-light': good === selectedGood,\n                  })\n                }\n              >\n                <td>\n                  {good === selectedGood\n                    ? (\n                      <button\n                        data-cy=\"RemoveButton\"\n                        type=\"button\"\n                        className=\"button is-info\"\n                        onClick={() => this.onHandleSetSelectedGood('')}\n                      >\n                        -\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"AddButton\"\n                        type=\"button\"\n                        className=\"button\"\n                        onClick={() => this.onHandleSetSelectedGood(good)}\n                      >\n                        +\n                      </button>\n                    )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}